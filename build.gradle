apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'maven-publish'

mainClassName = 'uk.gov.ida.notification.EidasProxyNodeApplication'
version = "1.0.0-${System.env.BUILD_NUMBER ?: 'SNAPSHOT'}"

buildscript {
    repositories {
        maven { url 'https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/whitelisted-repos/' }
    }

    dependencies {
      classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
    }
}

project.ext {
    dropwizardVersion = '1.2.0'
    openSamlVersion = '3.3.0'
    utilsVersion = '2.0.0'
}

repositories {
    maven { url 'https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/whitelisted-repos/' }
}

dependencies {
    compile ( 
        "io.dropwizard:dropwizard-core:${dropwizardVersion}",
        "io.dropwizard:dropwizard-client:${dropwizardVersion}",
        "io.dropwizard:dropwizard-views-mustache:${dropwizardVersion}",
        "org.opensaml:opensaml-core:${openSamlVersion}",
        "org.opensaml:opensaml-saml-impl:${openSamlVersion}",
        "uk.gov.ida:ida-saml-extensions:${openSamlVersion}-1.2a-41",
        "uk.gov.ida:saml-metadata-bindings:${openSamlVersion}-68",
        "uk.gov.ida:saml-security:${openSamlVersion}-58",
        "uk.gov.ida:security-utils:${utilsVersion}-331",
        "se.litsec.eidas:eidas-opensaml3:1.0.5",
        "uk.gov.ida:hub-saml:${openSamlVersion}-115",
    )
    testCompile(
        'junit:junit:4.12',
        'org.hamcrest:hamcrest-core:1.3',
        'org.hamcrest:hamcrest-library:1.3',
        "io.dropwizard:dropwizard-testing:${dropwizardVersion}",
        'net.sourceforge.htmlunit:htmlunit:2.28',
        "uk.gov.ida:common-test-utils:${utilsVersion}-38",
        "uk.gov.ida:saml-metadata-bindings-test:${openSamlVersion}-68",
        "uk.gov.verify:saml-test-utils:${openSamlVersion}-2",
    )
}

task paasManifestFileCheck {
    doFirst {
        if (!project.hasProperty('manifestFile')) {
            def usage = './gradlew pushToPaas -PmanifestFile=<path to file>'
            println 'Manifest file is missing!!'
            println "Please run " + usage
            throw new GradleException("Usage: " + usage)
        }
    }
}

task pushToPaas(type: Exec, dependsOn: [paasManifestFileCheck, distZip]) {
    doFirst {
        commandLine 'cf', 'push', '-f', manifestFile
    }
}

pushToPaas.dependsOn distZip

task wrapper(type: Wrapper) {
  gradleVersion = '3.3'
}

run {
  args 'server', './src/dist/config.yml'
}

// Acceptance Tests
sourceSets {
    acceptanceTest {
        java.srcDir file('src/acceptance-test/java')
        resources.srcDir file('src/acceptance-test/resources')
        compileClasspath += main.output + test.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task acceptanceTest(type: Test) {
    description = 'Runs the acceptance tests'
    group = 'verification'
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    setTestClassesDirs sourceSets.acceptanceTest.output.classesDirs
    reports.junitXml.setDestination new File("$buildDir/acceptance-test-results")
    reports.html.setDestination new File("$buildDir/reports/acceptance-test")
}

distZip {
    archiveName baseName+'.zip'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = "uk.gov.ida"
            artifactId = "eidas-notification"

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url "/srv/maven"
        }
    }
}
